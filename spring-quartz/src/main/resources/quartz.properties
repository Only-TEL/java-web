org.quartz.scheduler.instanceName = CodeScheduler
org.quartz.scheduler.instanceId = AUTO
org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false

org.quartz.threadPool.threadCount = 5
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread= true
org.quartz.jobStore.misfireThreshold = 5000
org.quartz.jobStore.class= org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass= org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.dataSource = quartzDataSource
org.quartz.jobStore.tablePrefix = qrtz_
# 在调度流程的第一步，也就是拉取待即将触发的triggers时，是上锁的状态，
# 即不会同时存在多个线程拉取到相同的trigger的情况，也就避免的重复调度的危险。

#org.quartz.dataSource.quartzDataSource.driver = com.mysql.jdbc.Driver
#org.quartz.dataSource.quartzDataSource.URL = jdbc:mysql://localhost:3306/test?useSSL=true
#org.quartz.dataSource.quartzDataSource.user = root
#org.quartz.dataSource.quartzDataSource.password = password
## Enable HikariCP DB conn Pool
#org.quartz.dataSource.quartzDataSource.provider = hikaricp
## Custom hikaricp config properties. You can add more based on their docs:
#org.quartz.dataSource.quartzDataSource.maximumPoolSize = 10
#org.quartz.dataSource.quartzDataSource.connectionTestQuery = SELECT 1
#org.quartz.dataSource.quartzDataSource.validationTimeout = 5000
#org.quartz.dataSource.quartzDataSource.idleTimeout = 0
